/*
 * This file is generated by jOOQ.
 */
package org.example.tables.records;


import java.util.UUID;

import org.example.tables.OrderProductmodel;
import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderProductmodelRecord extends TableRecordImpl<OrderProductmodelRecord> implements Record3<UUID, UUID, Short> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.order_productmodel.order_id</code>.
     */
    public void setOrderId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.order_productmodel.order_id</code>.
     */
    public UUID getOrderId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.order_productmodel.product_model_id</code>.
     */
    public void setProductModelId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.order_productmodel.product_model_id</code>.
     */
    public UUID getProductModelId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.order_productmodel.cnt_products</code>.
     */
    public void setCntProducts(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.order_productmodel.cnt_products</code>.
     */
    public Short getCntProducts() {
        return (Short) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<UUID, UUID, Short> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<UUID, UUID, Short> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return OrderProductmodel.ORDER_PRODUCTMODEL.ORDER_ID;
    }

    @Override
    public Field<UUID> field2() {
        return OrderProductmodel.ORDER_PRODUCTMODEL.PRODUCT_MODEL_ID;
    }

    @Override
    public Field<Short> field3() {
        return OrderProductmodel.ORDER_PRODUCTMODEL.CNT_PRODUCTS;
    }

    @Override
    public UUID component1() {
        return getOrderId();
    }

    @Override
    public UUID component2() {
        return getProductModelId();
    }

    @Override
    public Short component3() {
        return getCntProducts();
    }

    @Override
    public UUID value1() {
        return getOrderId();
    }

    @Override
    public UUID value2() {
        return getProductModelId();
    }

    @Override
    public Short value3() {
        return getCntProducts();
    }

    @Override
    public OrderProductmodelRecord value1(UUID value) {
        setOrderId(value);
        return this;
    }

    @Override
    public OrderProductmodelRecord value2(UUID value) {
        setProductModelId(value);
        return this;
    }

    @Override
    public OrderProductmodelRecord value3(Short value) {
        setCntProducts(value);
        return this;
    }

    @Override
    public OrderProductmodelRecord values(UUID value1, UUID value2, Short value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrderProductmodelRecord
     */
    public OrderProductmodelRecord() {
        super(OrderProductmodel.ORDER_PRODUCTMODEL);
    }

    /**
     * Create a detached, initialised OrderProductmodelRecord
     */
    public OrderProductmodelRecord(UUID orderId, UUID productModelId, Short cntProducts) {
        super(OrderProductmodel.ORDER_PRODUCTMODEL);

        setOrderId(orderId);
        setProductModelId(productModelId);
        setCntProducts(cntProducts);
    }
}
