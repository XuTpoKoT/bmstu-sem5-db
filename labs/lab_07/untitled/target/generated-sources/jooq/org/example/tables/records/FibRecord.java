/*
 * This file is generated by jOOQ.
 */
package org.example.tables.records;


import org.example.tables.Fib;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Row1;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FibRecord extends TableRecordImpl<FibRecord> implements Record1<Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.fib.fibonacci</code>.
     */
    public void setFibonacci(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.fib.fibonacci</code>.
     */
    public Integer getFibonacci() {
        return (Integer) get(0);
    }

    // -------------------------------------------------------------------------
    // Record1 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row1<Integer> fieldsRow() {
        return (Row1) super.fieldsRow();
    }

    @Override
    public Row1<Integer> valuesRow() {
        return (Row1) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Fib.FIB.FIBONACCI;
    }

    @Override
    public Integer component1() {
        return getFibonacci();
    }

    @Override
    public Integer value1() {
        return getFibonacci();
    }

    @Override
    public FibRecord value1(Integer value) {
        setFibonacci(value);
        return this;
    }

    @Override
    public FibRecord values(Integer value1) {
        value1(value1);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FibRecord
     */
    public FibRecord() {
        super(Fib.FIB);
    }

    /**
     * Create a detached, initialised FibRecord
     */
    public FibRecord(Integer fibonacci) {
        super(Fib.FIB);

        setFibonacci(fibonacci);
    }
}
