/*
 * This file is generated by jOOQ.
 */
package org.example.tables;


import java.util.UUID;
import java.util.function.Function;

import org.example.Public;
import org.example.tables.records.GetProductModelsByColorRecord;
import org.jooq.Field;
import org.jooq.Function3;
import org.jooq.Name;
import org.jooq.Records;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.SelectField;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GetProductModelsByColor extends TableImpl<GetProductModelsByColorRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.get_product_models_by_color</code>
     */
    public static final GetProductModelsByColor GET_PRODUCT_MODELS_BY_COLOR = new GetProductModelsByColor();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetProductModelsByColorRecord> getRecordType() {
        return GetProductModelsByColorRecord.class;
    }

    /**
     * The column <code>public.get_product_models_by_color.out_id</code>.
     */
    public final TableField<GetProductModelsByColorRecord, UUID> OUT_ID = createField(DSL.name("out_id"), SQLDataType.UUID, this, "");

    /**
     * The column <code>public.get_product_models_by_color.out_name</code>.
     */
    public final TableField<GetProductModelsByColorRecord, String> OUT_NAME = createField(DSL.name("out_name"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.get_product_models_by_color.out_color</code>.
     */
    public final TableField<GetProductModelsByColorRecord, String> OUT_COLOR = createField(DSL.name("out_color"), SQLDataType.CLOB, this, "");

    private GetProductModelsByColor(Name alias, Table<GetProductModelsByColorRecord> aliased) {
        this(alias, aliased, new Field[] {
            DSL.val(null, SQLDataType.CLOB),
            DSL.val(null, SQLDataType.CLOB)
        });
    }

    private GetProductModelsByColor(Name alias, Table<GetProductModelsByColorRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.function());
    }

    /**
     * Create an aliased <code>public.get_product_models_by_color</code> table
     * reference
     */
    public GetProductModelsByColor(String alias) {
        this(DSL.name(alias), GET_PRODUCT_MODELS_BY_COLOR);
    }

    /**
     * Create an aliased <code>public.get_product_models_by_color</code> table
     * reference
     */
    public GetProductModelsByColor(Name alias) {
        this(alias, GET_PRODUCT_MODELS_BY_COLOR);
    }

    /**
     * Create a <code>public.get_product_models_by_color</code> table reference
     */
    public GetProductModelsByColor() {
        this(DSL.name("get_product_models_by_color"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public GetProductModelsByColor as(String alias) {
        return new GetProductModelsByColor(DSL.name(alias), this, parameters);
    }

    @Override
    public GetProductModelsByColor as(Name alias) {
        return new GetProductModelsByColor(alias, this, parameters);
    }

    @Override
    public GetProductModelsByColor as(Table<?> alias) {
        return new GetProductModelsByColor(alias.getQualifiedName(), this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetProductModelsByColor rename(String name) {
        return new GetProductModelsByColor(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetProductModelsByColor rename(Name name) {
        return new GetProductModelsByColor(name, null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetProductModelsByColor rename(Table<?> name) {
        return new GetProductModelsByColor(name.getQualifiedName(), null, parameters);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<UUID, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * Call this table-valued function
     */
    public GetProductModelsByColor call(
          String color1
        , String color2
    ) {
        GetProductModelsByColor result = new GetProductModelsByColor(DSL.name("get_product_models_by_color"), null, new Field[] {
            DSL.val(color1, SQLDataType.CLOB),
            DSL.val(color2, SQLDataType.CLOB)
        });

        return aliased() ? result.as(getUnqualifiedName()) : result;
    }

    /**
     * Call this table-valued function
     */
    public GetProductModelsByColor call(
          Field<String> color1
        , Field<String> color2
    ) {
        GetProductModelsByColor result = new GetProductModelsByColor(DSL.name("get_product_models_by_color"), null, new Field[] {
            color1,
            color2
        });

        return aliased() ? result.as(getUnqualifiedName()) : result;
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Function)}.
     */
    public <U> SelectField<U> mapping(Function3<? super UUID, ? super String, ? super String, ? extends U> from) {
        return convertFrom(Records.mapping(from));
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Class,
     * Function)}.
     */
    public <U> SelectField<U> mapping(Class<U> toType, Function3<? super UUID, ? super String, ? super String, ? extends U> from) {
        return convertFrom(toType, Records.mapping(from));
    }
}
