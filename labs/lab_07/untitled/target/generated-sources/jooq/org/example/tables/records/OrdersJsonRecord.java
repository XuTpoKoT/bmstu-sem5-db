/*
 * This file is generated by jOOQ.
 */
package org.example.tables.records;


import java.util.UUID;

import org.example.tables.OrdersJson;
import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrdersJsonRecord extends TableRecordImpl<OrdersJsonRecord> implements Record2<UUID, JSONB> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.orders_json.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.orders_json.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.orders_json.doc</code>.
     */
    public void setDoc(JSONB value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.orders_json.doc</code>.
     */
    public JSONB getDoc() {
        return (JSONB) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, JSONB> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, JSONB> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return OrdersJson.ORDERS_JSON.ID;
    }

    @Override
    public Field<JSONB> field2() {
        return OrdersJson.ORDERS_JSON.DOC;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public JSONB component2() {
        return getDoc();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public JSONB value2() {
        return getDoc();
    }

    @Override
    public OrdersJsonRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public OrdersJsonRecord value2(JSONB value) {
        setDoc(value);
        return this;
    }

    @Override
    public OrdersJsonRecord values(UUID value1, JSONB value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrdersJsonRecord
     */
    public OrdersJsonRecord() {
        super(OrdersJson.ORDERS_JSON);
    }

    /**
     * Create a detached, initialised OrdersJsonRecord
     */
    public OrdersJsonRecord(UUID id, JSONB doc) {
        super(OrdersJson.ORDERS_JSON);

        setId(id);
        setDoc(doc);
    }
}
